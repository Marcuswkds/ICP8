import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers.core import Dense
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler


data = pd.read_csv("breastcancer.csv", header=0)  # Reading the dataset.
print(data.isnull().sum())  # Printing the number of null values.
data = data.iloc[:, :32]


labelEncoder = LabelEncoder()
target = labelEncoder.fit_transform(data["diagnosis"])  # Targeting the dataframe after converting the dataset into numerical values.
data = data.drop(["diagnosis", "id"], axis=1)

scaler = StandardScaler()  # Setting the scaler.
scaler.fit(data)  # Fitting the data to the model
dataFrame_scaled_array = scaler.transform(data)  # Transforming the dataset.


X_train, X_test, Y_train, Y_test = train_test_split(dataFrame_scaled_array, target, test_size=0.25, random_state=87)  # Splitting the dataset into testing and training sets.

np.random.seed(155)
model = Sequential()  # Creating the model
model.add(Dense(20, input_dim=30, activation='relu'))  # Adding hidden layer with 20 nodes
model.add(Dense(30, activation='relu'))  # Adding hidden layer with 30 nodes
model.add(Dense(1, activation='sigmoid'))  # Adding output layer
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['acc'])
fit = model.fit(X_train, Y_train, epochs=100)

print(model.summary())
print(model.evaluate(X_test, Y_test))  # Printing the Loss and Accuracy for the dataset.
